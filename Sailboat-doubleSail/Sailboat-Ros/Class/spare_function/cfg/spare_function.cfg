#!/usr/bin/env python
PACKAGE = "spare_function"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# name - a string which specifies the name under which this parameter should be stored
# type - defines the type of value stored, and can be any of int_t, double_t, str_t, or bool_t
# level - A bitmask which will later be passed to the dynamic reconfigure callback. When the callback is called all of the level values for parameters that have been changed are ORed together and the resulting value is passed to the callback.
# description - string which describes the parameter
# default - specifies the default value
# min - specifies the min value (optional and does not apply to strings and bools)
# max - specifies the max value (optional and does not apply to strings and bools)

gen.add("PC_Ctrl",   bool_t,   0, "PC_Ctrl",  False)

gen.add("oyaw", double_t, 0, "oyaw",    2,  -10,   10)

gen.add("rudderP", double_t, 0, "rudderP",    0.5,  -10,   10)
gen.add("rudderI", double_t, 0, "rudderI",    0,    -10,   10)
gen.add("rudderD", double_t, 0, "rudderD",    0.2,  -10,   10)

gen.add("sailP", double_t, 0, "sailP",    0,  -180,   180)
gen.add("sailI", double_t, 0, "sailI",    0,    -180,   180)
gen.add("sailD", double_t, 0, "sailD",    0,  -10,   10)

exit(gen.generate(PACKAGE, "spare_function", "spare_function_"))

